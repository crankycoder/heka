// Automatically generated by MockGen. DO NOT EDIT!
// Source: heka/pipeline (interfaces: OutputWriter)

package testsupport

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of OutputWriter interface
type MockOutputWriter struct {
	ctrl     *gomock.Controller
	recorder *_MockOutputWriterRecorder
}

// Recorder for MockOutputWriter (not exported)
type _MockOutputWriterRecorder struct {
	mock *MockOutputWriter
}

func NewMockOutputWriter(ctrl *gomock.Controller) *MockOutputWriter {
	mock := &MockOutputWriter{ctrl: ctrl}
	mock.recorder = &_MockOutputWriterRecorder{mock}
	return mock
}

func (_m *MockOutputWriter) EXPECT() *_MockOutputWriterRecorder {
	return _m.recorder
}

func (_m *MockOutputWriter) MakeOutputData() interface{} {
	ret := _m.ctrl.Call(_m, "MakeOutputData")
	ret0, _ := ret[0].(interface{})
	return ret0
}

func (_mr *_MockOutputWriterRecorder) MakeOutputData() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MakeOutputData")
}

func (_m *MockOutputWriter) Stop() {
	_m.ctrl.Call(_m, "Stop")
}

func (_mr *_MockOutputWriterRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}

func (_m *MockOutputWriter) Write(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "Write", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockOutputWriterRecorder) Write(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Write", arg0)
}
