// Automatically generated by MockGen. DO NOT EDIT!
// Source: pipeline/runner.go

package testsupport

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Plugin interface
type MockPlugin struct {
	ctrl     *gomock.Controller
	recorder *_MockPluginRecorder
}

// Recorder for MockPlugin (not exported)
type _MockPluginRecorder struct {
	mock *MockPlugin
}

func NewMockPlugin(ctrl *gomock.Controller) *MockPlugin {
	mock := &MockPlugin{ctrl: ctrl}
	mock.recorder = &_MockPluginRecorder{mock}
	return mock
}

func (_m *MockPlugin) EXPECT() *_MockPluginRecorder {
	return _m.recorder
}

func (_m *MockPlugin) Init(config interface{}) error {
	ret := _m.ctrl.Call(_m, "Init", config)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPluginRecorder) Init(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init", arg0)
}
